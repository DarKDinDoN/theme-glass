!function(){"use strict";const e={MODULE_NAME:"theme-glass",MODULE_TITLE:"Theme: Glass"};e.PATH=`modules/${e.MODULE_NAME}/`;const a=foundry.utils.debounce((()=>window.location.reload()),500),t="enable-blur",s="chat-opacity",n="collapse-hotbar",i="no-pause",o="hide-logo",g="reduce-scene-list";class c{static init(){console.log(`${e.MODULE_TITLE} | Initializing module`),game.settings.register(e.MODULE_NAME,t,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${t}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${t}-hint`),scope:"client",config:!0,default:!0,type:Boolean,onChange:()=>a()}),game.settings.register(e.MODULE_NAME,s,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${s}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${s}-hint`),scope:"world",config:!0,default:!0,type:Boolean,onChange:()=>a()}),game.settings.register(e.MODULE_NAME,n,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${n}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${n}-hint`),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>a()}),game.settings.register(e.MODULE_NAME,i,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${i}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${i}-hint`),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>a()}),game.settings.register(e.MODULE_NAME,o,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${o}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${o}-hint`),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>a()}),game.settings.register(e.MODULE_NAME,g,{name:game.i18n.localize(`${e.MODULE_NAME}.settings.${g}-name`),hint:game.i18n.localize(`${e.MODULE_NAME}.settings.${g}-hint`),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>a()})}static blurWarningMessage(){if(document.body.addEventListener("click",(async a=>{(a.target.classList.contains("glass-theme-blur-message")||a.target.parentNode.classList.contains("glass-theme-blur-message"))&&((new SettingsConfig).render(!0),await new Promise((e=>setTimeout(e,100))).then((()=>ui.activeWindow.activateTab(e.MODULE_NAME))))})),!game.user.getFlag(e.MODULE_NAME,"blurWarningMessageShown")){const a=[`\n          <div>\n            <h3>Theme: Glass</h3>\n            <p>${game.i18n.localize(`${e.MODULE_NAME}.blurWarningMessage`)}</p>\n            <p>\n              <button type="button" class="glass-theme-blur-message" data-key="theme-glass.enable-blur">\n                <i class="fas fa-cogs"></i> ${game.i18n.localize("SETTINGS.Configure")}\n              </button>\n            </p>\n          </div>\n        `].map((e=>({whisper:[game.user.id],speaker:{alias:"Theme: Glass"},flags:{core:{canPopout:!0}},content:e})));ChatMessage.implementation.createDocuments(a),game.user.setFlag(e.MODULE_NAME,"blurWarningMessageShown",!0)}}static blurInterface(){game.settings.get(e.MODULE_NAME,t)&&document.body.classList.add("shouldBlur")}static async chatOpacity(){game.settings.get(e.MODULE_NAME,s)&&(document.body.classList.add("addChatOpacity"),document.querySelectorAll("#chat-log li.chat-message").forEach((e=>e.classList.add("opacity-transition"))),Hooks.on("renderChatMessage",(async(e,a)=>{a[0].classList.add("opacity-delay"),await new Promise((e=>setTimeout(e,1e4))).then((()=>{a[0].classList.add("opacity-transition"),a[0].classList.remove("opacity-delay")}))})))}static collapseHotbar(){game.settings.get(e.MODULE_NAME,n)&&ui.hotbar.collapse()}static removePause(){game.settings.get(e.MODULE_NAME,i)&&game.users.current.isGM&&game.paused&&game.togglePause(!1,!0)}static hideLogo(){game.settings.get(e.MODULE_NAME,o)&&document.body.classList.add("hideLogo")}static reduceScenes(){game.settings.get(e.MODULE_NAME,g)&&document.body.classList.add("changeScenesHeight")}}Hooks.once("init",c.init),Hooks.once("ready",c.blurWarningMessage),Hooks.once("ready",c.chatOpacity),Hooks.once("ready",c.blurInterface),Hooks.once("renderHotbar",c.collapseHotbar),Hooks.once("ready",c.removePause),Hooks.once("ready",c.hideLogo),Hooks.once("ready",c.reduceScenes)}();